/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface SwcAccordion {
        "isCollapsible": boolean;
    }
    interface SwcAccordionItem {
        "close": () => Promise<void>;
        "index": number;
        "label": string;
        "open": () => Promise<void>;
    }
    interface SwcModal {
        "hide": () => Promise<void>;
        "show": () => Promise<void>;
        /**
          * The modal size
         */
        "size": 'sm' | 'md' | 'lg';
        /**
          * The modal static backdrop
         */
        "staticBackdrop": boolean;
        "toggle": () => Promise<void>;
        /**
          * The modal visibility state
         */
        "visible": boolean;
    }
    interface SwcTooltip {
        "content": string;
        "isHtml": boolean;
        "position": 'bottom' | 'top' | 'right' | 'left';
    }
}
declare global {
    interface HTMLSwcAccordionElement extends Components.SwcAccordion, HTMLStencilElement {
    }
    var HTMLSwcAccordionElement: {
        prototype: HTMLSwcAccordionElement;
        new (): HTMLSwcAccordionElement;
    };
    interface HTMLSwcAccordionItemElement extends Components.SwcAccordionItem, HTMLStencilElement {
    }
    var HTMLSwcAccordionItemElement: {
        prototype: HTMLSwcAccordionItemElement;
        new (): HTMLSwcAccordionItemElement;
    };
    interface HTMLSwcModalElement extends Components.SwcModal, HTMLStencilElement {
    }
    var HTMLSwcModalElement: {
        prototype: HTMLSwcModalElement;
        new (): HTMLSwcModalElement;
    };
    interface HTMLSwcTooltipElement extends Components.SwcTooltip, HTMLStencilElement {
    }
    var HTMLSwcTooltipElement: {
        prototype: HTMLSwcTooltipElement;
        new (): HTMLSwcTooltipElement;
    };
    interface HTMLElementTagNameMap {
        "swc-accordion": HTMLSwcAccordionElement;
        "swc-accordion-item": HTMLSwcAccordionItemElement;
        "swc-modal": HTMLSwcModalElement;
        "swc-tooltip": HTMLSwcTooltipElement;
    }
}
declare namespace LocalJSX {
    interface SwcAccordion {
        "isCollapsible"?: boolean;
    }
    interface SwcAccordionItem {
        "index": number;
        "label": string;
        "onToggle"?: (event: CustomEvent<any>) => void;
    }
    interface SwcModal {
        /**
          * The modal size
         */
        "size"?: 'sm' | 'md' | 'lg';
        /**
          * The modal static backdrop
         */
        "staticBackdrop"?: boolean;
        /**
          * The modal visibility state
         */
        "visible"?: boolean;
    }
    interface SwcTooltip {
        "content"?: string;
        "isHtml"?: boolean;
        "position"?: 'bottom' | 'top' | 'right' | 'left';
    }
    interface IntrinsicElements {
        "swc-accordion": SwcAccordion;
        "swc-accordion-item": SwcAccordionItem;
        "swc-modal": SwcModal;
        "swc-tooltip": SwcTooltip;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "swc-accordion": LocalJSX.SwcAccordion & JSXBase.HTMLAttributes<HTMLSwcAccordionElement>;
            "swc-accordion-item": LocalJSX.SwcAccordionItem & JSXBase.HTMLAttributes<HTMLSwcAccordionItemElement>;
            "swc-modal": LocalJSX.SwcModal & JSXBase.HTMLAttributes<HTMLSwcModalElement>;
            "swc-tooltip": LocalJSX.SwcTooltip & JSXBase.HTMLAttributes<HTMLSwcTooltipElement>;
        }
    }
}
